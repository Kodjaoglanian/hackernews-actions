name: Hacker News to Discord

on:
  schedule:
    - cron: "0 9 * * *"  # Roda todo dia √†s 09:00 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  send-news:
    runs-on: ubuntu-latest  # Usa runner hospedado pelo GitHub
    environment: production  # Coloque o nome do seu environment que tem o secret

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Validate Discord webhook env
        run: |
          if [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            echo "‚ùå DISCORD_WEBHOOK_URL n√£o definido!"
            exit 1
          fi
          echo "‚úÖ DISCORD_WEBHOOK_URL definido."

      - name: Send Hacker News to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python << EOF
          import os
          import requests

          webhook_url = os.environ.get("DISCORD_WEBHOOK_URL")
          if not webhook_url:
              raise Exception("‚ùå DISCORD_WEBHOOK_URL n√£o definido.")

          top_stories = requests.get("https://hacker-news.firebaseio.com/v0/topstories.json").json()[:5]
          mensagens = []

          for story_id in top_stories:
              story = requests.get(f"https://hacker-news.firebaseio.com/v0/item/{story_id}.json").json()
              title = story.get('title', 'Sem t√≠tulo')
              url = story.get('url', f"https://news.ycombinator.com/item?id={story_id}")
              mensagens.append(f"**{title}**\n{url}\n")

          payload = {
              "content": "üì∞ **Top Hacker News do dia:**\n\n" + "\n".join(mensagens)
          }

          resp = requests.post(url=webhook_url, json=payload)
          resp.raise_for_status()
          print("‚úÖ Not√≠cias enviadas com sucesso!")
          EOF
