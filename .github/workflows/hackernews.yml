name: Hacker News to Discord

on:
  schedule:
    - cron: "0 9 * * *"  # Executa todo dia √†s 09:00 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  send-news:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: Configurar Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Instalar depend√™ncias
        run: pip install requests

      - name: Validar vari√°vel DISCORD_WEBHOOK_URL
        run: |
          if [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            echo "::error::‚ùå Vari√°vel DISCORD_WEBHOOK_URL n√£o configurada. Abortando."
            exit 1
          fi
          echo "‚úÖ Vari√°vel DISCORD_WEBHOOK_URL encontrada."

      - name: Enviar top 5 not√≠cias do Hacker News para Discord (embed)
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python << 'EOF'
          import os
          import requests
          from datetime import datetime

          WEBHOOK_URL = os.getenv("DISCORD_WEBHOOK_URL")
          if not WEBHOOK_URL:
              raise Exception("‚ùå Vari√°vel DISCORD_WEBHOOK_URL n√£o definida.")

          def get_top_stories(limit=5):
              try:
                  response = requests.get("https://hacker-news.firebaseio.com/v0/topstories.json", timeout=10)
                  response.raise_for_status()
                  return response.json()[:limit]
              except Exception as e:
                  raise RuntimeError(f"Erro ao buscar IDs das not√≠cias: {e}")

          def get_story_details(story_id):
              try:
                  resp = requests.get(f"https://hacker-news.firebaseio.com/v0/item/{story_id}.json", timeout=10)
                  resp.raise_for_status()
                  return resp.json()
              except Exception as e:
                  print(f"‚ö†Ô∏è Erro ao buscar detalhes da not√≠cia {story_id}: {e}")
                  return None

          def build_discord_embed(stories):
              current_date = datetime.utcnow().strftime("%d/%m/%Y %H:%M UTC")

              embed = {
                  "title": "üì∞ Top 5 Not√≠cias do Hacker News",
                  "url": "https://news.ycombinator.com/",
                  "color": 0xFF6600,  # Cor laranja do Hacker News
                  "footer": {
                      "text": f"Atualizado em {current_date}"
                  },
                  "fields": []
              }

              for story in stories:
                  if not story:
                      continue
                  title = story.get("title", "Sem t√≠tulo")
                  url = story.get("url") or f"https://news.ycombinator.com/item?id={story.get('id')}"
                  author = story.get("by", "desconhecido")
                  score = story.get("score", "N/A")
                  comments = story.get("descendants", 0)

                  field_value = (
                      f"[Link da not√≠cia]({url})\n"
                      f"Autor: **{author}**\n"
                      f"Pontos: **{score}** | Coment√°rios: **{comments}**"
                  )

                  # Limitar t√≠tulo a 256 chars para Discord
                  field_title = title if len(title) <= 256 else title[:253] + "..."

                  embed["fields"].append({
                      "name": field_title,
                      "value": field_value,
                      "inline": False
                  })

              return embed

          def send_to_discord(webhook_url, embed):
              payload = {
                  "embeds": [embed]
              }
              response = requests.post(webhook_url, json=payload)
              try:
                  response.raise_for_status()
                  print("‚úÖ Mensagem enviada para o Discord com sucesso!")
              except Exception as e:
                  raise RuntimeError(f"Erro ao enviar mensagem para o Discord: {e}")

          def main():
              print("üîç Buscando top stories do Hacker News...")
              top_story_ids = get_top_stories()

              stories = []
              for sid in top_story_ids:
                  story = get_story_details(sid)
                  if story:
                      stories.append(story)

              if not stories:
                  print("‚ö†Ô∏è Nenhuma not√≠cia v√°lida encontrada.")
                  return

              embed = build_discord_embed(stories)
              send_to_discord(WEBHOOK_URL, embed)

          if __name__ == "__main__":
              try:
                  main()
              except Exception as error:
                  print(f"‚ùå Falha ao executar script: {error}")
                  exit(1)
          EOF
